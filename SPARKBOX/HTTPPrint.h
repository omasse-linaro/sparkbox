/*********************************************************************
 * FileName: HTTPPrint.h
 * Provides callback headers and resolution for user's custom
 * HTTP Application.
 * Processor: PIC18,PIC24E, PIC24F, PIC24H, dsPIC30F, dsPIC33F, dsPIC33E,PIC32
 * Compiler:  Microchip C18, C30, C32
 * 
 * This file is automatically generated by the MPFS Utility
 * ALL MODIFICATIONS WILL BE OVERWRITTEN BY THE MPFS GENERATOR
 *
 * Software License Agreement
 *
 * Copyright (C) 2012 Microchip Technology Inc.  All rights
 * reserved.
 *
 * Microchip licenses to you the right to use, modify, copy, and 
  * distribute: 
 * (i)  the Software when embedded on a Microchip microcontroller or 
 *      digital signal controller product ("Device") which is 
 *      integrated into Licensee's product; or 
 * (ii) ONLY the Software driver source files ENC28J60.c, ENC28J60.h,
 *		ENCX24J600.c and ENCX24J600.h ported to a non-Microchip device
 *		used in conjunction with a Microchip ethernet controller for
 *		the sole purpose of interfacing with the ethernet controller.
 *
 * You should refer to the license agreement accompanying this 
 * Software for additional information regarding your rights and 
 * obligations.
 *
 * THE SOFTWARE AND DOCUMENTATION ARE PROVIDED "AS IS" WITHOUT
 * WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
 * LIMITATION, ANY WARRANTY OF MERCHANTABILITY, FITNESS FOR A 
 * PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * MICROCHIP BE LIABLE FOR ANY INCIDENTAL, SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF
 * PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY OR SERVICES, ANY CLAIMS
 * BY THIRD PARTIES (INCLUDING BUT NOT LIMITED TO ANY DEFENSE 
 * THEREOF), ANY CLAIMS FOR INDEMNITY OR CONTRIBUTION, OR OTHER 
 * SIMILAR COSTS, WHETHER ASSERTED ON THE BASIS OF CONTRACT, TORT
 * (INCLUDING NEGLIGENCE), BREACH OF WARRANTY, OR OTHERWISE.
 *
 *********************************************************************/

#ifndef __HTTPPRINT_H
#define __HTTPPRINT_H

#include "TCPIP Stack/TCPIP.h"

#if defined(STACK_USE_HTTP2_SERVER)

extern HTTP_STUB httpStubs[MAX_HTTP_CONNECTIONS];
extern BYTE curHTTPID;

void HTTPPrint(DWORD callbackID);
void HTTPPrint_header(void);
void HTTPPrint_status_fail(void);
void HTTPPrint_day(void);
void HTTPPrint_hour(void);
void HTTPPrint_cmd(void);
void HTTPPrint_Uptime(void);
void HTTPPrint_builddate(void);
void HTTPPrint_serialadt(void);
void HTTPPrint_ls(void);
void HTTPPrint_mois(WORD);
void HTTPPrint_donnees_an(void);
void HTTPPrint_bdtitre(void);
void HTTPPrint_bd(WORD);
void HTTPPrint_debug1(void);
void HTTPPrint_log(WORD);
void HTTPPrint_mynet_envoi(void);
void HTTPPrint_mynet_ser(void);
void HTTPPrint_mynet_por(void);
void HTTPPrint_mynet_log(void);
void HTTPPrint_mynet_pwd(void);
void HTTPPrint_monit_fct(WORD);
void HTTPPrint_monit_val(WORD);
void HTTPPrint_id_monitor(WORD);
void HTTPPrint_monit_mode(WORD);
void HTTPPrint_gmt(void);
void HTTPPrint_reboot(void);
void HTTPPrint_config_dhcpchecked(void);
void HTTPPrint_config_ip(void);
void HTTPPrint_config_subnet(void);
void HTTPPrint_config_gw(void);
void HTTPPrint_config_dns1(void);
void HTTPPrint_config_dns2(void);
void HTTPPrint_versiontcpip(void);
void HTTPPrint_tele(WORD,WORD);
void HTTPPrint_versionsoftadt(void);
void HTTPPrint_versionhardadt(void);
void HTTPPrint_debug_bt(void);
void HTTPPrint_led(WORD);
void HTTPPrint_Relais(WORD);
void HTTPPrint_config(WORD,WORD);
void HTTPPrint_rel_existe(WORD);
void HTTPPrint_erreur_xml(void);
void HTTPPrint_affiche_teleinfo(void);
void HTTPPrint_mess_log(void);
void HTTPPrint_date_ind(void);
void HTTPPrint_fichier_csv(void);
void HTTPPrint_state(void);
void HTTPPrint_temps_charge(void);
void HTTPPrint_Pilot_Value(void);
void HTTPPrint_Ac1(void);
void HTTPPrint_Ac2(void);
void HTTPPrint_Temp(void);
void HTTPPrint_Vref2(void);
void HTTPPrint_Test_Diode(void);
void HTTPPrint_Test_Relais(void);
void HTTPPrint_opto1(void);
void HTTPPrint_opto2(void);
void HTTPPrint_bp(void);
void HTTPPrint_ac(WORD);
void HTTPPrint_temp(void);
void HTTPPrint_Cour1(WORD);
void HTTPPrint_Cour2(WORD);
void HTTPPrint_pilot(void);
void HTTPPrint_Courant_Fuite(WORD);
void HTTPPrint_Amp_Programmes(WORD);
void HTTPPrint_Erreur_Parametre(void);

void HTTPPrint(DWORD callbackID)
{
	switch(callbackID)
	{
        case 0x00000000:
			HTTPIncFile((ROM BYTE*)"header.inc");
			break;
        case 0x00000001:
			HTTPPrint_header();
			break;
        case 0x00000002:
			HTTPPrint_status_fail();
			break;
        case 0x00000016:
			HTTPPrint_day();
			break;
        case 0x00000017:
			HTTPPrint_hour();
			break;
        case 0x00000018:
			HTTPIncFile((ROM BYTE*)"footer.inc");
			break;
        case 0x000001a9:
			HTTPPrint_cmd();
			break;
        case 0x000001af:
			HTTPPrint_Uptime();
			break;
        case 0x000001b1:
			HTTPPrint_builddate();
			break;
        case 0x000001b2:
			HTTPPrint_serialadt();
			break;
        case 0x000001b3:
			HTTPPrint_ls();
			break;
        case 0x000001b4:
			HTTPPrint_mois(1);
			break;
        case 0x000001b5:
			HTTPPrint_mois(2);
			break;
        case 0x000001b6:
			HTTPPrint_mois(3);
			break;
        case 0x000001b7:
			HTTPPrint_mois(4);
			break;
        case 0x000001b8:
			HTTPPrint_mois(5);
			break;
        case 0x000001b9:
			HTTPPrint_mois(6);
			break;
        case 0x000001ba:
			HTTPPrint_mois(7);
			break;
        case 0x000001bb:
			HTTPPrint_mois(8);
			break;
        case 0x000001bc:
			HTTPPrint_mois(9);
			break;
        case 0x000001bd:
			HTTPPrint_mois(10);
			break;
        case 0x000001be:
			HTTPPrint_mois(11);
			break;
        case 0x000001bf:
			HTTPPrint_mois(12);
			break;
        case 0x000001c0:
			HTTPPrint_donnees_an();
			break;
        case 0x000001c1:
			HTTPPrint_bdtitre();
			break;
        case 0x000001c2:
			HTTPPrint_bd(1);
			break;
        case 0x000001c3:
			HTTPPrint_bd(2);
			break;
        case 0x000001c4:
			HTTPPrint_bd(3);
			break;
        case 0x000001c5:
			HTTPPrint_bd(4);
			break;
        case 0x000001c6:
			HTTPPrint_bd(5);
			break;
        case 0x000001c7:
			HTTPPrint_bd(6);
			break;
        case 0x000001c8:
			HTTPPrint_bd(7);
			break;
        case 0x000001c9:
			HTTPPrint_bd(8);
			break;
        case 0x000001ca:
			HTTPPrint_bd(9);
			break;
        case 0x000001cb:
			HTTPPrint_bd(10);
			break;
        case 0x000001cc:
			HTTPPrint_bd(11);
			break;
        case 0x000001cd:
			HTTPPrint_bd(12);
			break;
        case 0x000001ce:
			HTTPPrint_bd(13);
			break;
        case 0x000001cf:
			HTTPPrint_bd(14);
			break;
        case 0x000001d0:
			HTTPPrint_bd(15);
			break;
        case 0x000001d1:
			HTTPPrint_bd(16);
			break;
        case 0x000001d2:
			HTTPPrint_bd(17);
			break;
        case 0x000001d3:
			HTTPPrint_bd(18);
			break;
        case 0x000001d4:
			HTTPPrint_bd(19);
			break;
        case 0x000001d5:
			HTTPPrint_bd(20);
			break;
        case 0x000001d6:
			HTTPPrint_bd(21);
			break;
        case 0x000001d7:
			HTTPPrint_bd(22);
			break;
        case 0x000001d8:
			HTTPPrint_bd(23);
			break;
        case 0x000001d9:
			HTTPPrint_bd(24);
			break;
        case 0x000001da:
			HTTPPrint_bd(25);
			break;
        case 0x000001db:
			HTTPPrint_bd(26);
			break;
        case 0x000001dc:
			HTTPPrint_bd(27);
			break;
        case 0x000001dd:
			HTTPPrint_bd(28);
			break;
        case 0x000001de:
			HTTPPrint_bd(29);
			break;
        case 0x000001df:
			HTTPPrint_bd(30);
			break;
        case 0x000001e0:
			HTTPPrint_bd(31);
			break;
        case 0x000001fc:
			HTTPPrint_debug1();
			break;
        case 0x000001fd:
			HTTPPrint_log(1);
			break;
        case 0x000001fe:
			HTTPPrint_log(2);
			break;
        case 0x000001ff:
			HTTPPrint_log(3);
			break;
        case 0x00000200:
			HTTPPrint_log(4);
			break;
        case 0x00000201:
			HTTPPrint_log(5);
			break;
        case 0x00000202:
			HTTPPrint_log(6);
			break;
        case 0x00000203:
			HTTPPrint_log(7);
			break;
        case 0x00000204:
			HTTPPrint_log(8);
			break;
        case 0x00000205:
			HTTPPrint_log(9);
			break;
        case 0x00000206:
			HTTPPrint_log(10);
			break;
        case 0x00000207:
			HTTPPrint_log(11);
			break;
        case 0x00000208:
			HTTPPrint_log(12);
			break;
        case 0x00000209:
			HTTPPrint_log(13);
			break;
        case 0x0000020a:
			HTTPPrint_log(14);
			break;
        case 0x0000020b:
			HTTPPrint_log(15);
			break;
        case 0x0000020c:
			HTTPPrint_log(16);
			break;
        case 0x0000020d:
			HTTPPrint_log(17);
			break;
        case 0x0000020e:
			HTTPPrint_log(18);
			break;
        case 0x0000020f:
			HTTPPrint_log(19);
			break;
        case 0x00000210:
			HTTPPrint_log(20);
			break;
        case 0x00000211:
			HTTPPrint_log(21);
			break;
        case 0x00000212:
			HTTPPrint_log(22);
			break;
        case 0x00000213:
			HTTPPrint_log(23);
			break;
        case 0x00000214:
			HTTPPrint_log(24);
			break;
        case 0x00000215:
			HTTPPrint_log(25);
			break;
        case 0x00000216:
			HTTPPrint_log(26);
			break;
        case 0x00000217:
			HTTPPrint_log(27);
			break;
        case 0x00000218:
			HTTPPrint_log(28);
			break;
        case 0x00000219:
			HTTPPrint_log(29);
			break;
        case 0x0000021a:
			HTTPPrint_log(30);
			break;
        case 0x0000021b:
			HTTPPrint_log(31);
			break;
        case 0x0000021c:
			HTTPPrint_log(32);
			break;
        case 0x0000021d:
			HTTPPrint_log(33);
			break;
        case 0x0000021e:
			HTTPPrint_log(34);
			break;
        case 0x0000021f:
			HTTPPrint_log(35);
			break;
        case 0x00000220:
			HTTPPrint_log(36);
			break;
        case 0x00000221:
			HTTPPrint_log(37);
			break;
        case 0x00000222:
			HTTPPrint_log(38);
			break;
        case 0x00000223:
			HTTPPrint_log(39);
			break;
        case 0x00000224:
			HTTPPrint_log(40);
			break;
        case 0x00000225:
			HTTPPrint_log(41);
			break;
        case 0x00000226:
			HTTPPrint_log(42);
			break;
        case 0x00000227:
			HTTPPrint_log(43);
			break;
        case 0x00000228:
			HTTPPrint_log(44);
			break;
        case 0x00000229:
			HTTPPrint_log(45);
			break;
        case 0x0000022a:
			HTTPPrint_log(46);
			break;
        case 0x0000022b:
			HTTPPrint_log(47);
			break;
        case 0x0000022c:
			HTTPPrint_log(48);
			break;
        case 0x0000022d:
			HTTPPrint_log(49);
			break;
        case 0x0000022e:
			HTTPPrint_log(50);
			break;
        case 0x0000022f:
			HTTPPrint_log(51);
			break;
        case 0x00000230:
			HTTPPrint_log(52);
			break;
        case 0x00000231:
			HTTPPrint_log(53);
			break;
        case 0x00000232:
			HTTPPrint_log(54);
			break;
        case 0x00000233:
			HTTPPrint_log(55);
			break;
        case 0x00000234:
			HTTPPrint_log(56);
			break;
        case 0x00000235:
			HTTPPrint_log(57);
			break;
        case 0x00000236:
			HTTPPrint_log(58);
			break;
        case 0x00000237:
			HTTPPrint_log(59);
			break;
        case 0x00000238:
			HTTPPrint_log(60);
			break;
        case 0x00000239:
			HTTPPrint_log(61);
			break;
        case 0x0000023a:
			HTTPPrint_log(62);
			break;
        case 0x0000023b:
			HTTPPrint_log(63);
			break;
        case 0x0000023c:
			HTTPPrint_log(64);
			break;
        case 0x0000023d:
			HTTPPrint_log(65);
			break;
        case 0x0000023e:
			HTTPPrint_log(66);
			break;
        case 0x0000023f:
			HTTPPrint_log(67);
			break;
        case 0x00000240:
			HTTPPrint_log(68);
			break;
        case 0x00000241:
			HTTPPrint_log(69);
			break;
        case 0x00000242:
			HTTPPrint_log(70);
			break;
        case 0x00000243:
			HTTPPrint_log(71);
			break;
        case 0x00000244:
			HTTPPrint_log(72);
			break;
        case 0x00000245:
			HTTPPrint_log(73);
			break;
        case 0x00000246:
			HTTPPrint_log(74);
			break;
        case 0x00000247:
			HTTPPrint_log(75);
			break;
        case 0x00000248:
			HTTPPrint_log(76);
			break;
        case 0x00000249:
			HTTPPrint_log(77);
			break;
        case 0x0000024a:
			HTTPPrint_log(78);
			break;
        case 0x0000024b:
			HTTPPrint_log(79);
			break;
        case 0x0000024c:
			HTTPPrint_log(80);
			break;
        case 0x00000257:
			HTTPPrint_mynet_envoi();
			break;
        case 0x00000258:
			HTTPPrint_mynet_ser();
			break;
        case 0x00000259:
			HTTPPrint_mynet_por();
			break;
        case 0x0000025a:
			HTTPPrint_mynet_log();
			break;
        case 0x0000025b:
			HTTPPrint_mynet_pwd();
			break;
        case 0x0000025c:
			HTTPPrint_monit_fct(0);
			break;
        case 0x0000025d:
			HTTPPrint_monit_val(0);
			break;
        case 0x0000025e:
			HTTPPrint_id_monitor(0);
			break;
        case 0x0000025f:
			HTTPPrint_monit_fct(1);
			break;
        case 0x00000260:
			HTTPPrint_monit_val(1);
			break;
        case 0x00000261:
			HTTPPrint_id_monitor(1);
			break;
        case 0x00000262:
			HTTPPrint_monit_fct(2);
			break;
        case 0x00000263:
			HTTPPrint_monit_val(2);
			break;
        case 0x00000264:
			HTTPPrint_id_monitor(2);
			break;
        case 0x00000265:
			HTTPPrint_monit_fct(3);
			break;
        case 0x00000266:
			HTTPPrint_monit_val(3);
			break;
        case 0x00000267:
			HTTPPrint_id_monitor(3);
			break;
        case 0x00000268:
			HTTPPrint_monit_fct(4);
			break;
        case 0x00000269:
			HTTPPrint_monit_val(4);
			break;
        case 0x0000026a:
			HTTPPrint_id_monitor(4);
			break;
        case 0x0000026b:
			HTTPPrint_monit_fct(5);
			break;
        case 0x0000026c:
			HTTPPrint_monit_val(5);
			break;
        case 0x0000026d:
			HTTPPrint_id_monitor(5);
			break;
        case 0x0000026e:
			HTTPPrint_monit_fct(6);
			break;
        case 0x0000026f:
			HTTPPrint_monit_val(6);
			break;
        case 0x00000270:
			HTTPPrint_id_monitor(6);
			break;
        case 0x00000271:
			HTTPPrint_monit_fct(7);
			break;
        case 0x00000272:
			HTTPPrint_monit_val(7);
			break;
        case 0x00000273:
			HTTPPrint_id_monitor(7);
			break;
        case 0x00000274:
			HTTPPrint_monit_fct(8);
			break;
        case 0x00000275:
			HTTPPrint_monit_val(8);
			break;
        case 0x00000276:
			HTTPPrint_id_monitor(8);
			break;
        case 0x00000277:
			HTTPPrint_monit_fct(9);
			break;
        case 0x00000278:
			HTTPPrint_monit_val(9);
			break;
        case 0x00000279:
			HTTPPrint_id_monitor(9);
			break;
        case 0x0000027a:
			HTTPPrint_monit_fct(10);
			break;
        case 0x0000027b:
			HTTPPrint_monit_val(10);
			break;
        case 0x0000027c:
			HTTPPrint_id_monitor(10);
			break;
        case 0x0000027d:
			HTTPPrint_monit_fct(11);
			break;
        case 0x0000027e:
			HTTPPrint_monit_val(11);
			break;
        case 0x0000027f:
			HTTPPrint_id_monitor(11);
			break;
        case 0x00000280:
			HTTPPrint_monit_fct(12);
			break;
        case 0x00000281:
			HTTPPrint_monit_val(12);
			break;
        case 0x00000282:
			HTTPPrint_id_monitor(12);
			break;
        case 0x00000283:
			HTTPPrint_monit_fct(13);
			break;
        case 0x00000284:
			HTTPPrint_monit_val(13);
			break;
        case 0x00000285:
			HTTPPrint_id_monitor(13);
			break;
        case 0x00000286:
			HTTPPrint_monit_fct(14);
			break;
        case 0x00000287:
			HTTPPrint_monit_val(14);
			break;
        case 0x00000288:
			HTTPPrint_id_monitor(14);
			break;
        case 0x00000289:
			HTTPPrint_monit_fct(15);
			break;
        case 0x0000028a:
			HTTPPrint_monit_val(15);
			break;
        case 0x0000028b:
			HTTPPrint_id_monitor(15);
			break;
        case 0x0000028f:
			HTTPPrint_monit_mode(1);
			break;
        case 0x00000290:
			HTTPPrint_monit_mode(4);
			break;
        case 0x00000295:
			HTTPPrint_gmt();
			break;
        case 0x00000296:
			HTTPPrint_reboot();
			break;
        case 0x00000297:
			HTTPPrint_config_dhcpchecked();
			break;
        case 0x00000298:
			HTTPPrint_config_ip();
			break;
        case 0x00000299:
			HTTPPrint_config_subnet();
			break;
        case 0x0000029a:
			HTTPPrint_config_gw();
			break;
        case 0x0000029b:
			HTTPPrint_config_dns1();
			break;
        case 0x0000029c:
			HTTPPrint_config_dns2();
			break;
        case 0x0000029d:
			HTTPPrint_versiontcpip();
			break;
        case 0x0000029e:
			HTTPPrint_tele(1,0);
			break;
        case 0x0000029f:
			HTTPPrint_tele(2,0);
			break;
        case 0x000002a0:
			HTTPPrint_tele(1,1);
			break;
        case 0x000002a1:
			HTTPPrint_tele(2,1);
			break;
        case 0x000002a2:
			HTTPPrint_tele(1,2);
			break;
        case 0x000002a3:
			HTTPPrint_tele(2,2);
			break;
        case 0x000002a4:
			HTTPPrint_tele(1,3);
			break;
        case 0x000002a5:
			HTTPPrint_tele(2,3);
			break;
        case 0x000002a6:
			HTTPPrint_tele(1,4);
			break;
        case 0x000002a7:
			HTTPPrint_tele(2,4);
			break;
        case 0x000002a8:
			HTTPPrint_tele(1,5);
			break;
        case 0x000002a9:
			HTTPPrint_tele(2,5);
			break;
        case 0x000002aa:
			HTTPPrint_tele(1,6);
			break;
        case 0x000002ab:
			HTTPPrint_tele(2,6);
			break;
        case 0x000002ac:
			HTTPPrint_tele(1,7);
			break;
        case 0x000002ad:
			HTTPPrint_tele(2,7);
			break;
        case 0x000002ae:
			HTTPPrint_tele(1,8);
			break;
        case 0x000002af:
			HTTPPrint_tele(2,8);
			break;
        case 0x000002b0:
			HTTPPrint_tele(1,9);
			break;
        case 0x000002b1:
			HTTPPrint_tele(2,9);
			break;
        case 0x000002b2:
			HTTPPrint_tele(1,10);
			break;
        case 0x000002b3:
			HTTPPrint_tele(2,10);
			break;
        case 0x000002b4:
			HTTPPrint_tele(1,11);
			break;
        case 0x000002b5:
			HTTPPrint_tele(2,11);
			break;
        case 0x000002b6:
			HTTPPrint_tele(1,12);
			break;
        case 0x000002b7:
			HTTPPrint_tele(2,12);
			break;
        case 0x000002b8:
			HTTPPrint_tele(1,13);
			break;
        case 0x000002b9:
			HTTPPrint_tele(2,13);
			break;
        case 0x000002ba:
			HTTPPrint_tele(1,15);
			break;
        case 0x000002bb:
			HTTPPrint_tele(2,15);
			break;
        case 0x000002bc:
			HTTPPrint_tele(1,16);
			break;
        case 0x000002bd:
			HTTPPrint_tele(2,16);
			break;
        case 0x000002be:
			HTTPPrint_tele(1,171);
			break;
        case 0x000002bf:
			HTTPPrint_tele(2,171);
			break;
        case 0x000002c0:
			HTTPPrint_tele(1,172);
			break;
        case 0x000002c1:
			HTTPPrint_tele(2,172);
			break;
        case 0x000002c2:
			HTTPPrint_tele(1,173);
			break;
        case 0x000002c3:
			HTTPPrint_tele(2,173);
			break;
        case 0x000002c4:
			HTTPPrint_tele(1,191);
			break;
        case 0x000002c5:
			HTTPPrint_tele(2,191);
			break;
        case 0x000002c6:
			HTTPPrint_tele(1,192);
			break;
        case 0x000002c7:
			HTTPPrint_tele(2,192);
			break;
        case 0x000002c8:
			HTTPPrint_tele(1,193);
			break;
        case 0x000002c9:
			HTTPPrint_tele(2,193);
			break;
        case 0x000002ca:
			HTTPPrint_tele(1,20);
			break;
        case 0x000002cb:
			HTTPPrint_tele(2,20);
			break;
        case 0x000002cc:
			HTTPPrint_tele(1,21);
			break;
        case 0x000002cd:
			HTTPPrint_tele(2,21);
			break;
        case 0x000002ce:
			HTTPPrint_tele(1,26);
			break;
        case 0x000002cf:
			HTTPPrint_tele(2,26);
			break;
        case 0x000002d0:
			HTTPPrint_versionsoftadt();
			break;
        case 0x000002d1:
			HTTPPrint_versionhardadt();
			break;
        case 0x000002d2:
			HTTPPrint_debug_bt();
			break;
        case 0x000002d7:
			HTTPPrint_tele(1,194);
			break;
        case 0x000002d8:
			HTTPPrint_tele(2,194);
			break;
        case 0x000002d9:
			HTTPPrint_tele(1,40);
			break;
        case 0x000002da:
			HTTPPrint_tele(2,40);
			break;
        case 0x000002db:
			HTTPPrint_tele(1,41);
			break;
        case 0x000002dc:
			HTTPPrint_tele(2,41);
			break;
        case 0x000002dd:
			HTTPPrint_tele(1,42);
			break;
        case 0x000002de:
			HTTPPrint_tele(2,42);
			break;
        case 0x000002df:
			HTTPPrint_tele(1,43);
			break;
        case 0x000002e0:
			HTTPPrint_tele(2,43);
			break;
        case 0x00000326:
			HTTPPrint_led(1);
			break;
        case 0x00000327:
			HTTPPrint_led(2);
			break;
        case 0x00000328:
			HTTPPrint_Relais(1);
			break;
        case 0x00000329:
			HTTPPrint_Relais(2);
			break;
        case 0x0000032a:
			HTTPPrint_Relais(3);
			break;
        case 0x0000032b:
			HTTPPrint_Relais(4);
			break;
        case 0x0000032c:
			HTTPPrint_tele(1,102);
			break;
        case 0x0000032d:
			HTTPPrint_tele(2,102);
			break;
        case 0x0000032e:
			HTTPPrint_tele(1,103);
			break;
        case 0x0000032f:
			HTTPPrint_tele(2,103);
			break;
        case 0x00000330:
			HTTPPrint_tele(1,104);
			break;
        case 0x00000331:
			HTTPPrint_tele(2,104);
			break;
        case 0x00000332:
			HTTPPrint_tele(1,105);
			break;
        case 0x00000333:
			HTTPPrint_tele(2,105);
			break;
        case 0x00000334:
			HTTPPrint_tele(1,106);
			break;
        case 0x00000335:
			HTTPPrint_tele(2,106);
			break;
        case 0x00000336:
			HTTPPrint_tele(1,107);
			break;
        case 0x00000337:
			HTTPPrint_tele(2,107);
			break;
        case 0x00000338:
			HTTPPrint_tele(1,108);
			break;
        case 0x00000339:
			HTTPPrint_tele(2,108);
			break;
        case 0x0000033a:
			HTTPPrint_tele(1,109);
			break;
        case 0x0000033b:
			HTTPPrint_tele(2,109);
			break;
        case 0x0000033c:
			HTTPPrint_tele(1,110);
			break;
        case 0x0000033d:
			HTTPPrint_tele(2,110);
			break;
        case 0x0000033e:
			HTTPPrint_tele(1,111);
			break;
        case 0x0000033f:
			HTTPPrint_tele(2,111);
			break;
        case 0x00000340:
			HTTPPrint_tele(1,112);
			break;
        case 0x00000341:
			HTTPPrint_tele(2,112);
			break;
        case 0x00000342:
			HTTPPrint_tele(1,113);
			break;
        case 0x00000343:
			HTTPPrint_tele(2,113);
			break;
        case 0x00000344:
			HTTPPrint_tele(1,120);
			break;
        case 0x00000345:
			HTTPPrint_tele(2,120);
			break;
        case 0x00000346:
			HTTPPrint_tele(1,140);
			break;
        case 0x00000347:
			HTTPPrint_tele(2,140);
			break;
        case 0x00000348:
			HTTPPrint_tele(1,141);
			break;
        case 0x00000349:
			HTTPPrint_tele(2,141);
			break;
        case 0x0000034a:
			HTTPPrint_tele(1,142);
			break;
        case 0x0000034b:
			HTTPPrint_tele(2,142);
			break;
        case 0x0000034c:
			HTTPPrint_tele(1,143);
			break;
        case 0x0000034d:
			HTTPPrint_tele(2,143);
			break;
        case 0x00000375:
			HTTPPrint_config(0,0);
			break;
        case 0x0000037b:
			HTTPPrint_config(1,0);
			break;
        case 0x00000393:
			HTTPPrint_config(2,0);
			break;
        case 0x00000394:
			HTTPPrint_config(3,0);
			break;
        case 0x00000395:
			HTTPPrint_config(4,0);
			break;
        case 0x00000396:
			HTTPPrint_config(5,0);
			break;
        case 0x00000397:
			HTTPPrint_config(6,0);
			break;
        case 0x00000398:
			HTTPPrint_config(7,0);
			break;
        case 0x00000399:
			HTTPPrint_config(8,0);
			break;
        case 0x0000039c:
			HTTPPrint_config(9,0);
			break;
        case 0x000003be:
			HTTPPrint_rel_existe(1);
			break;
        case 0x000003bf:
			HTTPPrint_rel_existe(2);
			break;
        case 0x000003c0:
			HTTPPrint_rel_existe(3);
			break;
        case 0x000003c1:
			HTTPPrint_rel_existe(4);
			break;
        case 0x000003e6:
			HTTPPrint_erreur_xml();
			break;
        case 0x00000454:
			HTTPPrint_affiche_teleinfo();
			break;
        case 0x00000456:
			HTTPPrint_mess_log();
			break;
        case 0x00000459:
			HTTPPrint_date_ind();
			break;
        case 0x0000045a:
			HTTPPrint_fichier_csv();
			break;
        case 0x0000045e:
			HTTPPrint_state();
			break;
        case 0x00000460:
			HTTPPrint_temps_charge();
			break;
        case 0x00000461:
			HTTPPrint_Pilot_Value();
			break;
        case 0x00000462:
			HTTPPrint_Ac1();
			break;
        case 0x00000463:
			HTTPPrint_Ac2();
			break;
        case 0x00000464:
			HTTPPrint_Temp();
			break;
        case 0x00000467:
			HTTPPrint_Vref2();
			break;
        case 0x0000046a:
			HTTPPrint_Test_Diode();
			break;
        case 0x0000046b:
			HTTPPrint_Test_Relais();
			break;
        case 0x0000046c:
			HTTPPrint_opto1();
			break;
        case 0x0000046d:
			HTTPPrint_opto2();
			break;
        case 0x0000046e:
			HTTPPrint_bp();
			break;
        case 0x0000046f:
			HTTPPrint_ac(1);
			break;
        case 0x00000470:
			HTTPPrint_ac(2);
			break;
        case 0x00000473:
			HTTPPrint_temp();
			break;
        case 0x00000474:
			HTTPPrint_Cour1(0);
			break;
        case 0x00000475:
			HTTPPrint_Cour2(0);
			break;
        case 0x00000476:
			HTTPPrint_pilot();
			break;
        case 0x00000477:
			HTTPPrint_Courant_Fuite(0);
			break;
        case 0x00000478:
			HTTPPrint_Amp_Programmes(0);
			break;
        case 0x00000479:
			HTTPPrint_Cour1(1);
			break;
        case 0x0000047a:
			HTTPPrint_Courant_Fuite(1);
			break;
        case 0x0000047b:
			HTTPPrint_Cour2(1);
			break;
        case 0x0000047c:
			HTTPPrint_Amp_Programmes(1);
			break;
        case 0x0000047d:
			HTTPPrint_Erreur_Parametre();
			break;
		default:
			// Output notification for undefined values
			TCPPutROMArray(sktHTTP, (ROM BYTE*)"!DEF", 4);
	}

	return;
}

void HTTPPrint_(void)
{
	TCPPut(sktHTTP, '~');
	return;
}

#endif

#endif
